enum UserType{
  Powerplant
  Substation
  Distributor
  Consumer
}

enum ActionType{
  Bought
  Sold
  Produced
}


type Powerplant @entity{
  id:String!
  number:Int!
  owner:Bytes!
  name:String!
  area:String!
  totalEnergyProduced:BigInt!
  totalEnergySold:BigInt!
  energyAvailableToBuy:BigInt!
  substations:[Substation!]
  addedAt:BigInt!
  energiesSoldByDate:[DailyEnergy!]
  energiesProducedByDate:[DailyEnergy!]
}

type Substation @entity{
  id:String!
  number:Int!
  owner:Bytes!
  name:String!
  area:String!
  totalEnergyBought:BigInt!
  totalEnergySold:BigInt!
  energyAvailableToBuy:BigInt!
  distributors:[Distributor!]
  addedAt:BigInt!
  energiesSoldByDate:[DailyEnergy!]
  energiesBoughtByDate:[DailyEnergy!]
  powerplant:Powerplant
  isConnectedToPowerplant:Boolean!
}

type Distributor @entity{
  id:String!
  number:Int!
  owner:Bytes!
  name:String!
  area:String!
  totalEnergyBought:BigInt!
  totalEnergySold:BigInt!
  energyAvailableToBuy:BigInt!
  consumers:[Consumer!]
  addedAt:BigInt!
  energiesSoldByDate:[DailyEnergy!]
  energiesBoughtByDate:[DailyEnergy!]
  substation:Substation
  isElectricitySupply:Boolean!
  toShowLessEnergyWarning:Boolean!
  isConnectedToSubstation:Boolean!
}

type Consumer @entity{
  id:String!
  number:Int!
  owner:Bytes!
  name:String!
  totalEnergyBought:BigInt!
  isElectricitySupply:Boolean!
  payableAmountForElectricity:BigInt!
  startCycleTime:BigInt!
  endCycleTime:BigInt!
  isLastElectricityBillPaid:Boolean!
  energyConsumedIncurrentCycle:BigInt!
  addedAt:BigInt!
  energiesBoughtByDate:[DailyEnergy!]
  distributor:Distributor
  payments:[ConsumerPayment!]
  isConnectedToDistributor:Boolean!
}

type DailyEnergy @entity{
  id:String!
  amount:BigInt!
  timestamp:BigInt!
  date:String!
  type:UserType!
  address:Bytes!
  userId:BigInt!
  actionType:String!
}

type ConsumerPayment @entity{
  id:String!
  # TODO: add ! to amount paid
  amountPaid:BigInt
  startTime:BigInt!
  endTime:BigInt!
  unitsConsumed:BigInt!
  consumer:Consumer!
  date:String!
}